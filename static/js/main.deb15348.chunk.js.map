{"version":3,"sources":["App.js","index.js"],"names":["App","useState","items","setItems","page","setPage","isLoading","setIsLoading","ref","useRef","handleScroll","e","target","scrollHeight","scrollTop","offsetHeight","prev","useEffect","current","addEventListener","removeEventListener","a","axios","get","data","getPhotos","className","map","item","src","url","alt","id","ReactDOM","render","document","getElementById"],"mappings":"qPA0CeA,MArCf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEWF,mBAAS,GAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGqBJ,oBAAS,GAH9B,mBAGNK,EAHM,KAGKC,EAHL,KAKTC,EAAMC,mBAEJC,EAAe,SAACC,GAChBA,EAAEC,OAAOC,aAAeF,EAAEC,OAAOE,YAAcH,EAAEC,OAAOG,cAC1DV,GAAQ,SAAAW,GAAI,OAAIA,EAAO,MAoB3B,OAjBAC,qBAAU,WAER,OADAT,EAAIU,QAAQC,iBAAiB,SAAUT,GAChC,WACLF,EAAIU,QAAQE,oBAAoB,SAAUV,MAE3C,IAEHO,qBAAU,YACO,uCAAG,8BAAAI,EAAA,6DAChBd,GAAa,GADG,SAEKe,IAAMC,IAAN,sEAAyEnB,IAF9E,gBAEVoB,EAFU,EAEVA,KACNrB,EAAS,GAAD,mBAAKD,GAAL,YAAesB,KACvBjB,GAAa,GAJG,2CAAH,qDAMfkB,KACC,CAACrB,IAGF,sBAAKI,IAAKA,EAAKkB,UAAU,YAAzB,UACGxB,EAAMyB,KAAI,SAAAC,GAAI,OAAI,qBAAmBF,UAAU,YAA7B,SAAyC,qBAAKG,IAAKD,EAAKE,IAAKC,IAAI,SAAvDH,EAAKI,OACjC1B,EAAY,qBAAKoB,UAAU,SAAf,wBAA2C,S,MChC9DO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.deb15348.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\n\n\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n\n  let ref = useRef()\n\n  const handleScroll = (e) => {\n    if (e.target.scrollHeight - e.target.scrollTop === e.target.offsetHeight) {\n      setPage(prev => prev + 1)\n    }\n  }\n  useEffect(() => {\n    ref.current.addEventListener('scroll', handleScroll)\n    return () => {\n      ref.current.removeEventListener('scroll', handleScroll)\n    }\n  }, [])\n\n  useEffect(() => {\n    const getPhotos = async () => {\n      setIsLoading(true)\n      let { data } = await axios.get(`https://jsonplaceholder.typicode.com/photos?_limit=10&_page=${page}`)\n      setItems([...items, ...data])\n      setIsLoading(false)\n    }\n    getPhotos()\n  }, [page])\n\n  return (\n    <div ref={ref} className='container'>\n      {items.map(item => <div key={item.id} className='data-card'><img src={item.url} alt=\"img\" /></div>)}\n      {isLoading ? <div className='center'>loading...</div> : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './scss/app.scss'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}